import{D as l,p as n}from"./wrapEmojiText-DJXpRYaz-DsSuZO2C.js";class m{constructor(t,i){this.inputField=t,this.size=i,this.max=45,this.needFrame=0,this.container=document.createElement("div"),this.container.classList.add("media-sticker-wrapper");const e=t.input;e.addEventListener("blur",()=>{this.playAnimation(0)}),e.addEventListener("input",o=>{this.playAnimation(t.value.length)})}playAnimation(t){if(!this.animation)return;t=Math.min(t,30);let i;t?(i=Math.round(Math.min(this.max,t)*(165/this.max)+11.33),this.idleAnimation&&(this.idleAnimation.stop(!0),this.idleAnimation.canvas[0].style.display="none"),this.animation.canvas[0].style.display=""):i=0;const e=this.needFrame>i?-1:1;this.animation.setDirection(e),this.needFrame!==0&&i===0&&this.animation.setSpeed(7),this.needFrame=i,this.animation.play()}load(){return this.loadPromise?this.loadPromise:this.loadPromise=Promise.all([n.loadAnimationAsAsset({container:this.container,loop:!0,autoplay:!0,width:this.size,height:this.size},"TwoFactorSetupMonkeyIdle").then(t=>(this.idleAnimation=t,this.inputField.value.length||t.play(),n.waitForFirstFrame(t))),n.loadAnimationAsAsset({container:this.container,loop:!1,autoplay:!1,width:this.size,height:this.size},"TwoFactorSetupMonkeyTracking").then(t=>(this.animation=t,this.inputField.value.length||(this.animation.canvas[0].style.display="none"),this.animation.addEventListener("enterFrame",i=>{(this.animation.direction===1&&i>=this.needFrame||this.animation.direction===-1&&i<=this.needFrame)&&(this.animation.setSpeed(1),this.animation.pause()),i===0&&this.needFrame===0&&this.idleAnimation&&(this.idleAnimation.canvas[0].style.display="",this.idleAnimation.play(),this.animation.canvas[0].style.display="none")}),n.waitForFirstFrame(t)))])}remove(){this.animation&&this.animation.remove(),this.idleAnimation&&this.idleAnimation.remove()}}class d extends l{constructor(t){super(Object.assign(t,{plainText:!0})),this.options=t;const i=this.input;i.type="tel",i.setAttribute("required",""),i.autocomplete="off";let e=0;this.input.addEventListener("input",o=>{this.input.classList.remove("error"),this.setLabel();const h=this.value.replace(/\D/g,"").slice(0,t.length);this.setValueSilently(h);const s=this.value.length;if(s===t.length)t.onFill(this.value);else if(s===e)return;e=s})}}export{m as d,d as m};
